<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20213.21.1112.1434                               -->
<workbook original-version='18.1' source-build='2021.3.4 (20213.21.1112.1434)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Data (average monthly revenue per paying customer worldwide)' inline='true' name='federated.07ap6he1k37qr51apx69h0cp37h6' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='average monthly revenue per paying customer worldwide' name='excel-direct.1mfl5dj1fsi8yq18sbzbq0l03h1p'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Exeter/HR/Netflix/average monthly revenue per paying customer worldwide.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1mfl5dj1fsi8yq18sbzbq0l03h1p' name='Data' table='[Data$]' type='table'>
          <columns gridOrigin='A1:B6:no:A1:B6:0' header='yes' outcome='2'>
            <column datatype='string' name='Year' ordinal='0' />
            <column datatype='real' name='Netflix`s average monthly revenue per paying customer worldwide (US Dollars)' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1mfl5dj1fsi8yq18sbzbq0l03h1p' name='Data' table='[Data$]' type='table'>
          <columns gridOrigin='A1:B6:no:A1:B6:0' header='yes' outcome='2'>
            <column datatype='string' name='Year' ordinal='0' />
            <column datatype='real' name='Netflix`s average monthly revenue per paying customer worldwide (US Dollars)' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B6:no:A1:B6:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_1D08D68615F143E38F90578E14079391]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Netflix`s average monthly revenue per paying customer worldwide (US Dollars)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Netflix`s average monthly revenue per paying customer worldwide (US Dollars)]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Netflix`s average monthly revenue per paying customer worldwide (US Dollars)</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_1D08D68615F143E38F90578E14079391]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Data' datatype='table' name='[__tableau_internal_object_id__].[Data_1D08D68615F143E38F90578E14079391]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Data' id='Data_1D08D68615F143E38F90578E14079391'>
            <properties context=''>
              <relation connection='excel-direct.1mfl5dj1fsi8yq18sbzbq0l03h1p' name='Data' table='[Data$]' type='table'>
                <columns gridOrigin='A1:B6:no:A1:B6:0' header='yes' outcome='2'>
                  <column datatype='string' name='Year' ordinal='0' />
                  <column datatype='real' name='Netflix`s average monthly revenue per paying customer worldwide (US Dollars)' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Data (netflixs-quarterly-revenue-2013-2021)' inline='true' name='federated.023ftca0t4tsje128grlk0jvpwzq' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='netflixs-quarterly-revenue-2013-2021' name='excel-direct.0dk7xwa14qy4vu12681d51sr74dj'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Exeter/HR/Netflix/netflixs-quarterly-revenue-2013-2021.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0dk7xwa14qy4vu12681d51sr74dj' name='Data' table='[Data$]' type='table'>
          <columns gridOrigin='B1:D36:no:B1:D36:0' header='yes' outcome='6'>
            <column datatype='string' name='Quarter' ordinal='0' />
            <column datatype='real' name='Revenue' ordinal='1' />
            <column datatype='real' name='Net Income' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0dk7xwa14qy4vu12681d51sr74dj' name='Data' table='[Data$]' type='table'>
          <columns gridOrigin='B1:D36:no:B1:D36:0' header='yes' outcome='6'>
            <column datatype='string' name='Quarter' ordinal='0' />
            <column datatype='real' name='Revenue' ordinal='1' />
            <column datatype='real' name='Net Income' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;B1:D36:no:B1:D36:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quarter</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Quarter]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Quarter</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_BF05CA84C4E843E8AA5EA203C08B90A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Revenue</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Revenue]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Revenue</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_BF05CA84C4E843E8AA5EA203C08B90A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Net Income</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Net Income]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Net Income</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_BF05CA84C4E843E8AA5EA203C08B90A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[Net Income]' role='measure' type='quantitative' />
      <column datatype='real' name='[Revenue]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Data' datatype='table' name='[__tableau_internal_object_id__].[Data_BF05CA84C4E843E8AA5EA203C08B90A4]' role='measure' type='quantitative' />
      <column-instance column='[Net Income]' derivation='Sum' name='[sum:Net Income:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Revenue]' derivation='Sum' name='[sum:Revenue:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.023ftca0t4tsje128grlk0jvpwzq].[sum:Net Income:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.023ftca0t4tsje128grlk0jvpwzq].[sum:Revenue:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Data' id='Data_BF05CA84C4E843E8AA5EA203C08B90A4'>
            <properties context=''>
              <relation connection='excel-direct.0dk7xwa14qy4vu12681d51sr74dj' name='Data' table='[Data$]' type='table'>
                <columns gridOrigin='B1:D36:no:B1:D36:0' header='yes' outcome='6'>
                  <column datatype='string' name='Quarter' ordinal='0' />
                  <column datatype='real' name='Revenue' ordinal='1' />
                  <column datatype='real' name='Net Income' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Data (no of subscribers worldwide)' inline='true' name='federated.0av2dyp0669cet15pnl7j0431q91' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='no of subscribers worldwide' name='excel-direct.1w9otsm14fldz416u4qi81hsv7vk'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='D:/Exeter/HR/Netflix/no of subscribers worldwide.xlsx' interpretationMode='1' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1w9otsm14fldz416u4qi81hsv7vk' name='Data' table='[Data$]' type='table'>
          <columns gridOrigin='B1:C5:no:B1:C5:1' header='no' lost='0' outcome='1' processed='4'>
            <column datatype='string' name='Leading Netflix markets worldwide in 2nd quarter 2021, by number of subscribers' ordinal='0' />
            <column datatype='integer' name='F2' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1w9otsm14fldz416u4qi81hsv7vk' name='Data' table='[Data$]' type='table'>
          <columns gridOrigin='B1:C5:no:B1:C5:1' header='no' lost='0' outcome='1' processed='4'>
            <column datatype='string' name='Leading Netflix markets worldwide in 2nd quarter 2021, by number of subscribers' ordinal='0' />
            <column datatype='integer' name='F2' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;B1:C5:no:B1:C5:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>4</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Leading Netflix markets worldwide in 2nd quarter 2021, by number of subscribers</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Leading Netflix markets worldwide in 2nd quarter 2021, by number of subscribers]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Leading Netflix markets worldwide in 2nd quarter 2021, by number of subscribers</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_CDB3B37BB92A4C1FB41404C93736F888]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F2]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>F2</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_CDB3B37BB92A4C1FB41404C93736F888]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Leading Netflix markets worldwide in 2nd quarter 2021, by number of subscribers]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Data' datatype='table' name='[__tableau_internal_object_id__].[Data_CDB3B37BB92A4C1FB41404C93736F888]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Data' id='Data_CDB3B37BB92A4C1FB41404C93736F888'>
            <properties context=''>
              <relation connection='excel-direct.1w9otsm14fldz416u4qi81hsv7vk' name='Data' table='[Data$]' type='table'>
                <columns gridOrigin='B1:C5:no:B1:C5:1' header='no' lost='0' outcome='1' processed='4'>
                  <column datatype='string' name='Leading Netflix markets worldwide in 2nd quarter 2021, by number of subscribers' ordinal='0' />
                  <column datatype='integer' name='F2' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Data (netflix_-employee-count-2020)' inline='true' name='federated.068kx4818bv4ad14o7ayt0l83b4x' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='netflix_-employee-count-2020' name='excel-direct.0w3th1w1iqli2j19byyj80o2acnm'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Exeter/HR/Netflix/netflix_-employee-count-2020.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0w3th1w1iqli2j19byyj80o2acnm' name='Data' table='[Data$]' type='table'>
          <columns gridOrigin='B1:C8:no:B1:C8:0' header='yes' lost='0' outcome='2' processed='12'>
            <column datatype='string' name='Year' ordinal='0' />
            <column datatype='integer' name='Number' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0w3th1w1iqli2j19byyj80o2acnm' name='Data' table='[Data$]' type='table'>
          <columns gridOrigin='B1:C8:no:B1:C8:0' header='yes' lost='0' outcome='2' processed='12'>
            <column datatype='string' name='Year' ordinal='0' />
            <column datatype='integer' name='Number' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;B1:C8:no:B1:C8:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_A4E387BCF7814B71AAB9699230DBE28B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Number</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_A4E387BCF7814B71AAB9699230DBE28B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Data' datatype='table' name='[__tableau_internal_object_id__].[Data_A4E387BCF7814B71AAB9699230DBE28B]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Data' id='Data_A4E387BCF7814B71AAB9699230DBE28B'>
            <properties context=''>
              <relation connection='excel-direct.0w3th1w1iqli2j19byyj80o2acnm' name='Data' table='[Data$]' type='table'>
                <columns gridOrigin='B1:C8:no:B1:C8:0' header='yes' lost='0' outcome='2' processed='12'>
                  <column datatype='string' name='Year' ordinal='0' />
                  <column datatype='integer' name='Number' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Data (netflixs-marketing-spend-2017-2020)' inline='true' name='federated.0vdlpg10z0cemx19ugxtw1iss4yv' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='netflixs-marketing-spend-2017-2020' name='excel-direct.07q4cpz0bh975g11wz3lb118hddm'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Exeter/HR/Netflix/netflixs-marketing-spend-2017-2020.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.07q4cpz0bh975g11wz3lb118hddm' name='Data' table='[Data$]' type='table'>
          <columns gridOrigin='A1:B5:no:A1:B5:0' header='yes' outcome='2'>
            <column datatype='string' name='Year' ordinal='0' />
            <column datatype='real' name='Marketing expenses worldwide (billion U.S. dollars)' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.07q4cpz0bh975g11wz3lb118hddm' name='Data' table='[Data$]' type='table'>
          <columns gridOrigin='A1:B5:no:A1:B5:0' header='yes' outcome='2'>
            <column datatype='string' name='Year' ordinal='0' />
            <column datatype='real' name='Marketing expenses worldwide (billion U.S. dollars)' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B5:no:A1:B5:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_D4ED3DE9DA1E4C4B912C2DF978678833]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Marketing expenses worldwide (billion U.S. dollars)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Marketing expenses worldwide (billion U.S. dollars)]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Marketing expenses worldwide (billion U.S. dollars)</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_D4ED3DE9DA1E4C4B912C2DF978678833]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Data' datatype='table' name='[__tableau_internal_object_id__].[Data_D4ED3DE9DA1E4C4B912C2DF978678833]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Data' id='Data_D4ED3DE9DA1E4C4B912C2DF978678833'>
            <properties context=''>
              <relation connection='excel-direct.07q4cpz0bh975g11wz3lb118hddm' name='Data' table='[Data$]' type='table'>
                <columns gridOrigin='A1:B5:no:A1:B5:0' header='yes' outcome='2'>
                  <column datatype='string' name='Year' ordinal='0' />
                  <column datatype='real' name='Marketing expenses worldwide (billion U.S. dollars)' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Data (emmy-awards_-wins-by-network-2021)' inline='true' name='federated.0aur79i0gqgdek18oo3a310kquys' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='emmy-awards_-wins-by-network-2021' name='excel-direct.00iju5v0rcagzk181jxpk11kwq46'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='D:/Exeter/HR/Netflix/emmy-awards_-wins-by-network-2021.xlsx' interpretationMode='1' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.00iju5v0rcagzk181jxpk11kwq46' name='Data' table='[Data$]' type='table'>
          <columns gridOrigin='B3:C15:no:B3:C15:2' header='yes' lost='0' outcome='1' processed='10'>
            <column datatype='string' name='Emmy Awards: wins by network 2021 Number of wins for the Primetime Emmy Awards in the United States in 2021, by network' ordinal='0' />
            <column datatype='integer' name='F2' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.00iju5v0rcagzk181jxpk11kwq46' name='Data' table='[Data$]' type='table'>
          <columns gridOrigin='B3:C15:no:B3:C15:2' header='yes' lost='0' outcome='1' processed='10'>
            <column datatype='string' name='Emmy Awards: wins by network 2021 Number of wins for the Primetime Emmy Awards in the United States in 2021, by network' ordinal='0' />
            <column datatype='integer' name='F2' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;B3:C15:no:B3:C15:2&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>10</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Emmy Awards: wins by network 2021 Number of wins for the Primetime Emmy Awards in the United States in 2021, by network</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Emmy Awards: wins by network 2021 Number of wins for the Primetime Emmy Awards in the United States in 2021, by network]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Emmy Awards: wins by network 2021 Number of wins for the Primetime Emmy Awards in the United States in 2021, by network</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_62960C49BDF743F48F005B14204F222B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F2]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>F2</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_62960C49BDF743F48F005B14204F222B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Data' datatype='table' name='[__tableau_internal_object_id__].[Data_62960C49BDF743F48F005B14204F222B]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Data' id='Data_62960C49BDF743F48F005B14204F222B'>
            <properties context=''>
              <relation connection='excel-direct.00iju5v0rcagzk181jxpk11kwq46' name='Data' table='[Data$]' type='table'>
                <columns gridOrigin='B3:C15:no:B3:C15:2' header='yes' lost='0' outcome='1' processed='10'>
                  <column datatype='string' name='Emmy Awards: wins by network 2021 Number of wins for the Primetime Emmy Awards in the United States in 2021, by network' ordinal='0' />
                  <column datatype='integer' name='F2' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Data (market share)' inline='true' name='federated.072w5cd1fbf12g1dhok7e0v5rspb' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='market share' name='excel-direct.1akdift010j5w018nnuxd0klxkim'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Exeter/HR/Netflix/market share.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1akdift010j5w018nnuxd0klxkim' name='Data' table='[Data$]' type='table'>
          <columns gridOrigin='B1:C6:no:B1:C6:0' header='no' outcome='6'>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='real' name='F2' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1akdift010j5w018nnuxd0klxkim' name='Data' table='[Data$]' type='table'>
          <columns gridOrigin='B1:C6:no:B1:C6:0' header='no' outcome='6'>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='real' name='F2' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;B1:C6:no:B1:C6:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>false</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_F73A79B2370648D38AE201C68282C342]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F2]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>F2</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_F73A79B2370648D38AE201C68282C342]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[F1]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Data' datatype='table' name='[__tableau_internal_object_id__].[Data_F73A79B2370648D38AE201C68282C342]' role='measure' type='quantitative' />
      <column-instance column='[F1]' derivation='None' name='[none:F1:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:F1:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Amazon Prime Video&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;HBO Max&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Disney+&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Netflix&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CBS All Access&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Hulu&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Apple TV+&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Data' id='Data_F73A79B2370648D38AE201C68282C342'>
            <properties context=''>
              <relation connection='excel-direct.1akdift010j5w018nnuxd0klxkim' name='Data' table='[Data$]' type='table'>
                <columns gridOrigin='B1:C6:no:B1:C6:0' header='no' outcome='6'>
                  <column datatype='string' name='F1' ordinal='0' />
                  <column datatype='real' name='F2' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Customer_Satisfaction_Competitors)' inline='true' name='federated.0k8pnyi04vr0wx1coktyv0a0t3sd' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Customer_Satisfaction_Competitors' name='excel-direct.1pvj5dj1vu7ouv17s63w30aazr6q'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Exeter/HR/Netflix/Customer_Satisfaction_Competitors.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1pvj5dj1vu7ouv17s63w30aazr6q' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E5:no:A1:E5:0' header='yes' outcome='6'>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='integer' name='Easy to watch' ordinal='1' />
            <column datatype='integer' name='Easy to use on all devices' ordinal='2' />
            <column datatype='integer' name='Interesting original content' ordinal='3' />
            <column datatype='integer' name='Reliable Source' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1pvj5dj1vu7ouv17s63w30aazr6q' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E5:no:A1:E5:0' header='yes' outcome='6'>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='integer' name='Easy to watch' ordinal='1' />
            <column datatype='integer' name='Easy to use on all devices' ordinal='2' />
            <column datatype='integer' name='Interesting original content' ordinal='3' />
            <column datatype='integer' name='Reliable Source' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E5:no:A1:E5:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C30774DB1F0246A9AD45D92F594DB2F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Easy to watch</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Easy to watch]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Easy to watch</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C30774DB1F0246A9AD45D92F594DB2F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Easy to use on all devices</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Easy to use on all devices]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Easy to use on all devices</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C30774DB1F0246A9AD45D92F594DB2F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Interesting original content</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Interesting original content]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Interesting original content</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C30774DB1F0246A9AD45D92F594DB2F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Reliable Source</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Reliable Source]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Reliable Source</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C30774DB1F0246A9AD45D92F594DB2F1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Easy to use on all devices]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Easy to watch]' role='measure' type='quantitative' />
      <column datatype='string' name='[F1]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Interesting original content]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Reliable Source]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_C30774DB1F0246A9AD45D92F594DB2F1]' role='measure' type='quantitative' />
      <column-instance column='[F1]' derivation='None' name='[none:F1:nk]' pivot='key' type='nominal' />
      <column-instance column='[Easy to use on all devices]' derivation='Sum' name='[sum:Easy to use on all devices:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Easy to watch]' derivation='Sum' name='[sum:Easy to watch:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Interesting original content]' derivation='Sum' name='[sum:Interesting original content:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Reliable Source]' derivation='Sum' name='[sum:Reliable Source:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0k8pnyi04vr0wx1coktyv0a0t3sd].[sum:Easy to use on all devices:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0k8pnyi04vr0wx1coktyv0a0t3sd].[sum:Reliable Source:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0k8pnyi04vr0wx1coktyv0a0t3sd].[sum:Interesting original content:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0k8pnyi04vr0wx1coktyv0a0t3sd].[sum:Easy to watch:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:F1:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Amazon Prime&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Netflix&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hulu&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;HBO Now&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_C30774DB1F0246A9AD45D92F594DB2F1'>
            <properties context=''>
              <relation connection='excel-direct.1pvj5dj1vu7ouv17s63w30aazr6q' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E5:no:A1:E5:0' header='yes' outcome='6'>
                  <column datatype='string' name='F1' ordinal='0' />
                  <column datatype='integer' name='Easy to watch' ordinal='1' />
                  <column datatype='integer' name='Easy to use on all devices' ordinal='2' />
                  <column datatype='integer' name='Interesting original content' ordinal='3' />
                  <column datatype='integer' name='Reliable Source' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Generation)' inline='true' name='federated.1lm7j0u04s4byx15gq53p1nid3os' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Generation' name='excel-direct.1uu0o3i112tyb71fx9tyl17pfd2x'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Exeter/HR/Netflix/Generation.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1uu0o3i112tyb71fx9tyl17pfd2x' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:L5:no:A1:L5:0' header='yes' outcome='6'>
            <column datatype='string' name='Channels' ordinal='0' />
            <column datatype='integer' name='Amazon Prime Video' ordinal='1' />
            <column datatype='integer' name='Apple TV+' ordinal='2' />
            <column datatype='integer' name='CBS All Access' ordinal='3' />
            <column datatype='integer' name='Discovery+' ordinal='4' />
            <column datatype='integer' name='Disney+' ordinal='5' />
            <column datatype='integer' name='HBO Max' ordinal='6' />
            <column datatype='integer' name='Hulu' ordinal='7' />
            <column datatype='integer' name='Netflix' ordinal='8' />
            <column datatype='integer' name='Paramount+' ordinal='9' />
            <column datatype='integer' name='Peacock' ordinal='10' />
            <column datatype='integer' name='Showtime' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1uu0o3i112tyb71fx9tyl17pfd2x' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:L5:no:A1:L5:0' header='yes' outcome='6'>
            <column datatype='string' name='Channels' ordinal='0' />
            <column datatype='integer' name='Amazon Prime Video' ordinal='1' />
            <column datatype='integer' name='Apple TV+' ordinal='2' />
            <column datatype='integer' name='CBS All Access' ordinal='3' />
            <column datatype='integer' name='Discovery+' ordinal='4' />
            <column datatype='integer' name='Disney+' ordinal='5' />
            <column datatype='integer' name='HBO Max' ordinal='6' />
            <column datatype='integer' name='Hulu' ordinal='7' />
            <column datatype='integer' name='Netflix' ordinal='8' />
            <column datatype='integer' name='Paramount+' ordinal='9' />
            <column datatype='integer' name='Peacock' ordinal='10' />
            <column datatype='integer' name='Showtime' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:L5:no:A1:L5:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Channels</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Channels]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Channels</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D17C264C572B40B7A2E14C653DD48F62]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Amazon Prime Video</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Amazon Prime Video]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Amazon Prime Video</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D17C264C572B40B7A2E14C653DD48F62]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Apple TV+</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Apple TV+]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Apple TV+</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D17C264C572B40B7A2E14C653DD48F62]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CBS All Access</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CBS All Access]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CBS All Access</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D17C264C572B40B7A2E14C653DD48F62]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discovery+</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Discovery+]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Discovery+</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D17C264C572B40B7A2E14C653DD48F62]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Disney+</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Disney+]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Disney+</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D17C264C572B40B7A2E14C653DD48F62]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HBO Max</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HBO Max]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HBO Max</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D17C264C572B40B7A2E14C653DD48F62]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hulu</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Hulu]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Hulu</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D17C264C572B40B7A2E14C653DD48F62]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Netflix</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Netflix]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Netflix</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D17C264C572B40B7A2E14C653DD48F62]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Paramount+</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Paramount+]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Paramount+</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D17C264C572B40B7A2E14C653DD48F62]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Peacock</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Peacock]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Peacock</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D17C264C572B40B7A2E14C653DD48F62]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Showtime</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Showtime]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Showtime</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D17C264C572B40B7A2E14C653DD48F62]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1lm7j0u04s4byx15gq53p1nid3os].[pcto:sum:Amazon Prime Video:qk]&quot;' value='Amazon Prime Video' />
        </aliases>
      </column>
      <column datatype='integer' name='[Amazon Prime Video]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_D17C264C572B40B7A2E14C653DD48F62]' role='measure' type='quantitative' />
      <column-instance column='[Amazon Prime Video]' derivation='Sum' name='[pcto:sum:Amazon Prime Video:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lm7j0u04s4byx15gq53p1nid3os]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1lm7j0u04s4byx15gq53p1nid3os].[sum:Generation X:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1lm7j0u04s4byx15gq53p1nid3os].[sum:Baby Boomers:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_D17C264C572B40B7A2E14C653DD48F62'>
            <properties context=''>
              <relation connection='excel-direct.1uu0o3i112tyb71fx9tyl17pfd2x' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:L5:no:A1:L5:0' header='yes' outcome='6'>
                  <column datatype='string' name='Channels' ordinal='0' />
                  <column datatype='integer' name='Amazon Prime Video' ordinal='1' />
                  <column datatype='integer' name='Apple TV+' ordinal='2' />
                  <column datatype='integer' name='CBS All Access' ordinal='3' />
                  <column datatype='integer' name='Discovery+' ordinal='4' />
                  <column datatype='integer' name='Disney+' ordinal='5' />
                  <column datatype='integer' name='HBO Max' ordinal='6' />
                  <column datatype='integer' name='Hulu' ordinal='7' />
                  <column datatype='integer' name='Netflix' ordinal='8' />
                  <column datatype='integer' name='Paramount+' ordinal='9' />
                  <column datatype='integer' name='Peacock' ordinal='10' />
                  <column datatype='integer' name='Showtime' ordinal='11' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Awards'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (emmy-awards_-wins-by-network-2021)' name='federated.0aur79i0gqgdek18oo3a310kquys' />
          </datasources>
          <datasource-dependencies datasource='federated.0aur79i0gqgdek18oo3a310kquys'>
            <column datatype='string' name='[Emmy Awards: wins by network 2021 Number of wins for the Primetime Emmy Awards in the United States in 2021, by network]' role='dimension' type='nominal' />
            <column datatype='integer' name='[F2]' role='measure' type='quantitative' />
            <column-instance column='[Emmy Awards: wins by network 2021 Number of wins for the Primetime Emmy Awards in the United States in 2021, by network]' derivation='None' name='[none:Emmy Awards: wins by network 2021 Number of wins for the Primetime Emmy Awards in the United States in 2021, by network:nk]' pivot='key' type='nominal' />
            <column-instance column='[F2]' derivation='Sum' name='[sum:F2:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aur79i0gqgdek18oo3a310kquys].[none:Emmy Awards: wins by network 2021 Number of wins for the Primetime Emmy Awards in the United States in 2021, by network:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Emmy Awards: wins by network 2021 Number of wins for the Primetime Emmy Awards in the United States in 2021, by network:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Emmy Awards: wins by network 2021 Number of wins for the Primetime Emmy Awards in the United States in 2021, by network:nk]' member='&quot;ABC&quot;' />
                <groupfilter function='member' level='[none:Emmy Awards: wins by network 2021 Number of wins for the Primetime Emmy Awards in the United States in 2021, by network:nk]' member='&quot;Adult Swim&quot;' />
                <groupfilter function='member' level='[none:Emmy Awards: wins by network 2021 Number of wins for the Primetime Emmy Awards in the United States in 2021, by network:nk]' member='&quot;CNN&quot;' />
                <groupfilter function='member' level='[none:Emmy Awards: wins by network 2021 Number of wins for the Primetime Emmy Awards in the United States in 2021, by network:nk]' member='&quot;FOX&quot;' />
                <groupfilter function='member' level='[none:Emmy Awards: wins by network 2021 Number of wins for the Primetime Emmy Awards in the United States in 2021, by network:nk]' member='&quot;FX&quot;' />
                <groupfilter function='member' level='[none:Emmy Awards: wins by network 2021 Number of wins for the Primetime Emmy Awards in the United States in 2021, by network:nk]' member='&quot;NBC&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0aur79i0gqgdek18oo3a310kquys].[none:Emmy Awards: wins by network 2021 Number of wins for the Primetime Emmy Awards in the United States in 2021, by network:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0aur79i0gqgdek18oo3a310kquys].[sum:F2:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0aur79i0gqgdek18oo3a310kquys].[none:Emmy Awards: wins by network 2021 Number of wins for the Primetime Emmy Awards in the United States in 2021, by network:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0aur79i0gqgdek18oo3a310kquys].[none:Emmy Awards: wins by network 2021 Number of wins for the Primetime Emmy Awards in the United States in 2021, by network:nk]' value='109' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0aur79i0gqgdek18oo3a310kquys].[sum:F2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0aur79i0gqgdek18oo3a310kquys].[sum:F2:qk]</rows>
        <cols>[federated.0aur79i0gqgdek18oo3a310kquys].[none:Emmy Awards: wins by network 2021 Number of wins for the Primetime Emmy Awards in the United States in 2021, by network:nk]</cols>
      </table>
      <simple-id uuid='{BA594A70-DD3D-4298-A283-AB814F038716}' />
    </worksheet>
    <worksheet name='CustomerSatisfcation'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Customer_Satisfaction_Competitors)' name='federated.0k8pnyi04vr0wx1coktyv0a0t3sd' />
          </datasources>
          <datasource-dependencies datasource='federated.0k8pnyi04vr0wx1coktyv0a0t3sd'>
            <column datatype='integer' name='[Easy to use on all devices]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Easy to watch]' role='measure' type='quantitative' />
            <column datatype='string' name='[F1]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Interesting original content]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Reliable Source]' role='measure' type='quantitative' />
            <column-instance column='[F1]' derivation='None' name='[none:F1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Easy to use on all devices]' derivation='Sum' name='[sum:Easy to use on all devices:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Easy to watch]' derivation='Sum' name='[sum:Easy to watch:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Interesting original content]' derivation='Sum' name='[sum:Interesting original content:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Reliable Source]' derivation='Sum' name='[sum:Reliable Source:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0k8pnyi04vr0wx1coktyv0a0t3sd].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0k8pnyi04vr0wx1coktyv0a0t3sd].[sum:Easy to use on all devices:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0k8pnyi04vr0wx1coktyv0a0t3sd].[sum:Easy to watch:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0k8pnyi04vr0wx1coktyv0a0t3sd].[sum:Interesting original content:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0k8pnyi04vr0wx1coktyv0a0t3sd].[sum:Reliable Source:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0k8pnyi04vr0wx1coktyv0a0t3sd].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0k8pnyi04vr0wx1coktyv0a0t3sd].[:Measure Names]' value='113' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0k8pnyi04vr0wx1coktyv0a0t3sd].[none:F1:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0k8pnyi04vr0wx1coktyv0a0t3sd].[Multiple Values]</rows>
        <cols>[federated.0k8pnyi04vr0wx1coktyv0a0t3sd].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{53750ECA-2346-4EEF-B111-9BEE967DCFDB}' />
    </worksheet>
    <worksheet name='Employees'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (netflix_-employee-count-2020)' name='federated.068kx4818bv4ad14o7ayt0l83b4x' />
          </datasources>
          <datasource-dependencies datasource='federated.068kx4818bv4ad14o7ayt0l83b4x'>
            <column datatype='integer' name='[Number]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number]' derivation='Sum' name='[sum:Number:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[federated.068kx4818bv4ad14o7ayt0l83b4x].[sum:Number:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.068kx4818bv4ad14o7ayt0l83b4x].[sum:Number:qk]</rows>
        <cols>[federated.068kx4818bv4ad14o7ayt0l83b4x].[none:Year:nk]</cols>
      </table>
      <simple-id uuid='{DB1ECE8C-CC4F-489D-96FA-48846ACDF981}' />
    </worksheet>
    <worksheet name='MarketShare'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (market share)' name='federated.072w5cd1fbf12g1dhok7e0v5rspb' />
          </datasources>
          <datasource-dependencies datasource='federated.072w5cd1fbf12g1dhok7e0v5rspb'>
            <column datatype='string' name='[F1]' role='dimension' type='nominal' />
            <column datatype='real' name='[F2]' role='measure' type='quantitative' />
            <column-instance column='[F1]' derivation='None' name='[none:F1:nk]' pivot='key' type='nominal' />
            <column-instance column='[F2]' derivation='Sum' name='[sum:F2:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.072w5cd1fbf12g1dhok7e0v5rspb].[none:F1:nk]' direction='DESC' using='[federated.072w5cd1fbf12g1dhok7e0v5rspb].[sum:F2:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.072w5cd1fbf12g1dhok7e0v5rspb].[none:F1:nk]' />
              <wedge-size column='[federated.072w5cd1fbf12g1dhok7e0v5rspb].[sum:F2:qk]' />
              <size column='[federated.072w5cd1fbf12g1dhok7e0v5rspb].[sum:F2:qk]' />
              <text column='[federated.072w5cd1fbf12g1dhok7e0v5rspb].[sum:F2:qk]' />
              <text column='[federated.072w5cd1fbf12g1dhok7e0v5rspb].[none:F1:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.9010497331619263' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <mark-labels>
          <mark-label id='0'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.072w5cd1fbf12g1dhok7e0v5rspb].[none:F1:nk]</field>
                  <field>[federated.072w5cd1fbf12g1dhok7e0v5rspb].[sum:F2:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;HBO Max&quot;</value>
                <value>3.6000000000000001</value>
              </tuple>
            </tuple-reference>
            <label-position x='0' y='0.5' />
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{9794E09E-A198-467F-AB09-438589636640}' />
    </worksheet>
    <worksheet name='Rev/Profit'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (netflixs-quarterly-revenue-2013-2021)' name='federated.023ftca0t4tsje128grlk0jvpwzq' />
          </datasources>
          <datasource-dependencies datasource='federated.023ftca0t4tsje128grlk0jvpwzq'>
            <column datatype='real' name='[Net Income]' role='measure' type='quantitative' />
            <column datatype='string' name='[Quarter]' role='dimension' type='nominal' />
            <column datatype='real' name='[Revenue]' role='measure' type='quantitative' />
            <column-instance column='[Quarter]' derivation='None' name='[none:Quarter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Net Income]' derivation='Sum' name='[sum:Net Income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Revenue]' derivation='Sum' name='[sum:Revenue:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.023ftca0t4tsje128grlk0jvpwzq].[none:Quarter:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.023ftca0t4tsje128grlk0jvpwzq].[sum:Revenue:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.023ftca0t4tsje128grlk0jvpwzq].[sum:Net Income:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.023ftca0t4tsje128grlk0jvpwzq].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.023ftca0t4tsje128grlk0jvpwzq].[sum:Revenue:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.023ftca0t4tsje128grlk0jvpwzq].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='124' />
                <format attr='has-stroke' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.023ftca0t4tsje128grlk0jvpwzq].[sum:Net Income:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.023ftca0t4tsje128grlk0jvpwzq].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.023ftca0t4tsje128grlk0jvpwzq].[sum:Revenue:qk] + [federated.023ftca0t4tsje128grlk0jvpwzq].[sum:Net Income:qk])</rows>
        <cols>[federated.023ftca0t4tsje128grlk0jvpwzq].[none:Quarter:nk]</cols>
      </table>
      <simple-id uuid='{D5F2B745-BDAC-440D-840F-EA427EE517D7}' />
    </worksheet>
    <worksheet name='Sheet 9'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Generation)' name='federated.1lm7j0u04s4byx15gq53p1nid3os' />
          </datasources>
          <datasource-dependencies datasource='federated.1lm7j0u04s4byx15gq53p1nid3os'>
            <column datatype='integer' name='[Amazon Prime Video]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Apple TV+]' role='measure' type='quantitative' />
            <column datatype='integer' name='[CBS All Access]' role='measure' type='quantitative' />
            <column datatype='string' name='[Channels]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Discovery+]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Disney+]' role='measure' type='quantitative' />
            <column datatype='integer' name='[HBO Max]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Hulu]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Netflix]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Paramount+]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Peacock]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Showtime]' role='measure' type='quantitative' />
            <column-instance column='[Channels]' derivation='None' name='[none:Channels:nk]' pivot='key' type='nominal' />
            <column-instance column='[Amazon Prime Video]' derivation='Sum' name='[pcto:sum:Amazon Prime Video:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Apple TV+]' derivation='Sum' name='[pcto:sum:Apple TV+:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[CBS All Access]' derivation='Sum' name='[pcto:sum:CBS All Access:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Discovery+]' derivation='Sum' name='[pcto:sum:Discovery+:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Disney+]' derivation='Sum' name='[pcto:sum:Disney+:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[HBO Max]' derivation='Sum' name='[pcto:sum:HBO Max:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Hulu]' derivation='Sum' name='[pcto:sum:Hulu:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Netflix]' derivation='Sum' name='[pcto:sum:Netflix:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Paramount+]' derivation='Sum' name='[pcto:sum:Paramount+:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Peacock]' derivation='Sum' name='[pcto:sum:Peacock:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Showtime]' derivation='Sum' name='[pcto:sum:Showtime:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lm7j0u04s4byx15gq53p1nid3os].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1lm7j0u04s4byx15gq53p1nid3os].[pcto:sum:Amazon Prime Video:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1lm7j0u04s4byx15gq53p1nid3os].[pcto:sum:Apple TV+:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1lm7j0u04s4byx15gq53p1nid3os].[pcto:sum:CBS All Access:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1lm7j0u04s4byx15gq53p1nid3os].[pcto:sum:Discovery+:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1lm7j0u04s4byx15gq53p1nid3os].[pcto:sum:Disney+:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1lm7j0u04s4byx15gq53p1nid3os].[pcto:sum:HBO Max:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1lm7j0u04s4byx15gq53p1nid3os].[pcto:sum:Hulu:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1lm7j0u04s4byx15gq53p1nid3os].[pcto:sum:Netflix:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1lm7j0u04s4byx15gq53p1nid3os].[pcto:sum:Paramount+:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1lm7j0u04s4byx15gq53p1nid3os].[pcto:sum:Peacock:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1lm7j0u04s4byx15gq53p1nid3os].[pcto:sum:Showtime:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1lm7j0u04s4byx15gq53p1nid3os].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1lm7j0u04s4byx15gq53p1nid3os].[pcto:sum:Amazon Prime Video:qk]' value='p0%' />
            <format attr='text-format' field='[federated.1lm7j0u04s4byx15gq53p1nid3os].[Multiple Values]' value='*0%' />
          </style-rule>
        </style>
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1lm7j0u04s4byx15gq53p1nid3os].[none:Channels:nk]' />
              <text column='[federated.1lm7j0u04s4byx15gq53p1nid3os].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lm7j0u04s4byx15gq53p1nid3os].[Multiple Values]</rows>
        <cols>[federated.1lm7j0u04s4byx15gq53p1nid3os].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{7DD88CA6-E362-49AD-A343-189969C5FE65}' />
    </worksheet>
    <worksheet name='Subscribers'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (no of subscribers worldwide)' name='federated.0av2dyp0669cet15pnl7j0431q91' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0av2dyp0669cet15pnl7j0431q91'>
            <column datatype='integer' name='[F2]' role='measure' type='quantitative' />
            <column datatype='string' name='[Leading Netflix markets worldwide in 2nd quarter 2021, by number of subscribers]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Leading Netflix markets worldwide in 2nd quarter 2021, by number of subscribers]' derivation='None' name='[none:Leading Netflix markets worldwide in 2nd quarter 2021, by number of subscribers:nk]' pivot='key' type='nominal' />
            <column-instance column='[F2]' derivation='Sum' name='[sum:F2:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0av2dyp0669cet15pnl7j0431q91].[Longitude (generated)]' field-type='quantitative' max='5159450.0130191967' min='-14563469.142053451' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0av2dyp0669cet15pnl7j0431q91].[Latitude (generated)]' field-type='quantitative' max='8357092.0464443108' min='-3178652.1732993405' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0av2dyp0669cet15pnl7j0431q91].[sum:F2:qk]' />
              <lod column='[federated.0av2dyp0669cet15pnl7j0431q91].[none:Leading Netflix markets worldwide in 2nd quarter 2021, by number of subscribers:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4612706899642944' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0av2dyp0669cet15pnl7j0431q91].[Latitude (generated)]</rows>
        <cols>[federated.0av2dyp0669cet15pnl7j0431q91].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{D70E38FA-259E-4C9F-BFB9-C333FC666270}' />
    </worksheet>
    <worksheet name='avgRevPerCust'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (average monthly revenue per paying customer worldwide)' name='federated.07ap6he1k37qr51apx69h0cp37h6' />
          </datasources>
          <datasource-dependencies datasource='federated.07ap6he1k37qr51apx69h0cp37h6'>
            <column datatype='real' name='[Netflix`s average monthly revenue per paying customer worldwide (US Dollars)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[Netflix`s average monthly revenue per paying customer worldwide (US Dollars)]' derivation='Sum' name='[sum:Netflix`s average monthly revenue per paying customer worldwide (US Dollars):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.07ap6he1k37qr51apx69h0cp37h6].[none:Year:nk]' value='134' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[federated.07ap6he1k37qr51apx69h0cp37h6].[sum:Netflix`s average monthly revenue per paying customer worldwide (US Dollars):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#59a14f' />
                <format attr='mark-transparency' value='255' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.07ap6he1k37qr51apx69h0cp37h6].[sum:Netflix`s average monthly revenue per paying customer worldwide (US Dollars):qk]</rows>
        <cols>[federated.07ap6he1k37qr51apx69h0cp37h6].[none:Year:nk]</cols>
      </table>
      <simple-id uuid='{A7A85404-E2CD-41A4-93F1-E64585506309}' />
    </worksheet>
    <worksheet name='mktSpend'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (netflixs-marketing-spend-2017-2020)' name='federated.0vdlpg10z0cemx19ugxtw1iss4yv' />
          </datasources>
          <datasource-dependencies datasource='federated.0vdlpg10z0cemx19ugxtw1iss4yv'>
            <column datatype='real' name='[Marketing expenses worldwide (billion U.S. dollars)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[Marketing expenses worldwide (billion U.S. dollars)]' derivation='Sum' name='[sum:Marketing expenses worldwide (billion U.S. dollars):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[federated.0vdlpg10z0cemx19ugxtw1iss4yv].[sum:Marketing expenses worldwide (billion U.S. dollars):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='397' />
                <format attr='maxheight' value='397' />
                <format attr='minwidth' value='240' />
                <format attr='maxwidth' value='240' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vdlpg10z0cemx19ugxtw1iss4yv].[sum:Marketing expenses worldwide (billion U.S. dollars):qk]</rows>
        <cols>[federated.0vdlpg10z0cemx19ugxtw1iss4yv].[none:Year:nk]</cols>
      </table>
      <simple-id uuid='{0707536F-231C-45A9-B0E9-806E9F32A8A2}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='245'>
    <window class='worksheet' name='avgRevPerCust'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07ap6he1k37qr51apx69h0cp37h6].[sum:Netflix`s average monthly revenue per paying customer worldwide (US Dollars):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{51D74B6C-C173-4F1D-9D84-58525E7FD15B}' />
    </window>
    <window class='worksheet' name='MarketShare'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.072w5cd1fbf12g1dhok7e0v5rspb].[none:F1:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.072w5cd1fbf12g1dhok7e0v5rspb].[sum:F2:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.072w5cd1fbf12g1dhok7e0v5rspb].[none:F1:nk]</field>
            <field>[federated.1j4rht61st023b1clsg93030c6et].[none:F2:nk]</field>
            <field>[federated.1j4rht61st023b1clsg93030c6et].[none:Most in-demand video streaming services worldwide 2020, by share of demand:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FD296397-6219-4E1D-839E-A4D555EB30A1}' />
    </window>
    <window class='worksheet' name='Rev/Profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.023ftca0t4tsje128grlk0jvpwzq].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.023ftca0t4tsje128grlk0jvpwzq].[none:Quarter:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B6F2E315-9762-46FB-AD9D-2EE25B203F56}' />
    </window>
    <window class='worksheet' name='Subscribers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0av2dyp0669cet15pnl7j0431q91].[sum:F2:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{7633715E-7173-4D75-B99B-2CD80DF5FF80}' />
    </window>
    <window class='worksheet' name='Employees'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='78'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.068kx4818bv4ad14o7ayt0l83b4x].[none:F1:nk]</field>
            <field>[federated.068kx4818bv4ad14o7ayt0l83b4x].[none:Number of Netflix employees from 2015 to 2020, by type:nk]</field>
            <field>[federated.068kx4818bv4ad14o7ayt0l83b4x].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{03193E1B-8D8F-4D8F-9469-4F27BA488303}' />
    </window>
    <window class='worksheet' name='mktSpend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vdlpg10z0cemx19ugxtw1iss4yv].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C61949FA-A411-434F-8206-4297C35B4B90}' />
    </window>
    <window class='worksheet' name='Awards'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aur79i0gqgdek18oo3a310kquys].[none:Emmy Awards: wins by network 2021 Number of wins for the Primetime Emmy Awards in the United States in 2021, by network:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{035D2641-90AF-4529-BA32-D96CCCA2A34A}' />
    </window>
    <window class='worksheet' name='CustomerSatisfcation'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0k8pnyi04vr0wx1coktyv0a0t3sd].[none:F1:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0k8pnyi04vr0wx1coktyv0a0t3sd].[:Measure Names]</field>
            <field>[federated.0k8pnyi04vr0wx1coktyv0a0t3sd].[none:F1:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{225CD188-E552-445B-916E-EAAB700725A2}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='7' param='[federated.1lm7j0u04s4byx15gq53p1nid3os].[none:Channels:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lm7j0u04s4byx15gq53p1nid3os].[:Measure Names]</field>
            <field>[federated.1lm7j0u04s4byx15gq53p1nid3os].[Multiple Values]</field>
            <field>[federated.1lm7j0u04s4byx15gq53p1nid3os].[none:Channels:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1CAEC7E8-8316-4A9B-B0C6-C1F7353FCAEC}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Awards' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='CustomerSatisfcation' width='192'>
      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
      jNE6bYT9LyCoahFOoNBuAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Employees' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAfRUlEQVR4nO3dd3RV14Hv8e/t0lUX6g1QB1GFJBA2zRgbMI5xCQ6uIXG8UiZr3mQmWTMp
      7zlrZWbeS/Ky1lszmZfEiccTl9h5bmAwmC5AgIRQQxJqqHFVQELlSrffc/b7A4yNbZCAK12V
      /fnLyNI5+0r7d/Y5++yiEUIIJGkG0mg0Gq2/CyFJ/iQDIM1oMgDSjCYDIM1oMgCTnBCCXa/9
      jvruYWqP7+JQZbu/izStaGQv0ORn7arl7UONmLHz2JNPUHpoL5eG7KxZu4rqklIu9Q+Ru+Ex
      mo7sxKl1smj988yLC/B3sSc92Qs0RYQm5BDtqCN6wVpUaydHSqox6AQjwoVGp0PrtVJR00ZH
      azPLNj0lK/9tkAGYIiLDI4iIjMBgCiIoOIJVGx4iQh2kts/EwqwUtECAOYLoyBB/F3VKkbdA
      U0TvxWZ0kXOIDNJzpbOZqgYLywpyaa2pwhgZR0hoNJ6hyyRnZWLwd2GnCI1Go/FLAD45pUaj
      mehTS9J1fnsGEEKgqqo/Ti1JN5DPANKMJgMgzWgyANKMJgMgTTlCCFwuJ6oQgMDlsDE8YuOz
      3TlCqLhcbgSgKh6GrVbszqv/dtiGGRoaAkDvjw8gSXejueoE/7XzMN//wY8Jdlj48EgJwjVE
      zPzNrM9LBlwc2/M+x6vd/PjHz9FaW0Z5vYWhvss88PQL7P79/yZ6bg4gWwBpCkrOzmNNfjYA
      gVGzefKrXyU/ZzZa9ZNudT0F6zeSGRsOQOqCPAqXLSYyMgQDV+jv12H3aq59pyRNMQEBgXxS
      1bVaKNrzLu7IedxfmHTtqzoCA43Xv18INxcaL6BixC2i+On//BlO6yW+jgyANOWodLW10N5h
      IaCxCae4SL1zFveGaukbsGNQnYSEmWlursfS1cGF9m5UaxcRycnYh7uwtLfSfK6fCIMLkLdA
      0hTksI8wf/FKDKoDc/IiFieYsVqtOB0DHCoqQQiFYauHwvuXYbM7SEhKwmWzkVqwmZWLM8lK
      DEcxRgF+GgukqipCCHQ63USfWpKuk8OhpWnF7VUorrlIZ6+VsV7XZQCkaaOkzsIv3yzm/7xT
      glcZ21gznwTA0lzD+3sPAzDY08qx48c5fOQoV0Y81NbVoHrslJaW41XlyGtp/Oi0WvQ6LYvS
      YtFpx1a1fRKAsJgUYsOvdjuFRKewetUq0uJCGba78XjcNFRXkpyVg14rhz9L40MIwek6C2sW
      z+aZBxahHWNd80k3aEho6Kf9shqV8xVlKCGJ5ESbaT7ThMsQzwNLjQghUBTl+nBoRVF8cXpJ
      4orVQen5Tv7786twu91j/jmfvwfobqrDkJBNdmwYGiAqKZO0uHDKzjWzYnEGer0eVVXRarWy
      F0jymaKqRtITI8lIisKgH3u98sEtkIuKUydRFCirrEM1BtDTdI7i4tNcGXaRnJRCSOwc0uOC
      cHvlJBjJ94btLg5XtLJpecZtVX7wSQtgYmnhyhu+kjQ364b/DxAdm3D3p5KkL3G2sRtVFRTM
      u/06JrtBpSlNFYI9p5p4sCD9tq/+IAMgTXH17X30DtpYtSjljn5eBkCaslQh2H/mAksz4oiN
      CLqjY8gASFNW74CNM/VdbF6RccdL7MgASFPW0cp2UmLDmBsfccfHkAGQpiSb083h8lY2L09H
      r7vzaiwDIE05QgjK6rvQaGBZ1t11r8sASFOOqgr2ljRzX+5czAF3txKqDIA05VzoGuDiZStr
      lsy562PJAEhTihCCj043kZ+dQHS4+a6PJwMgTSk9/SNUNPWwaXk6Wh+sLi4DIE0pJ6o7iI0I
      IiN5lk+OJwMgTRluj8K+0gtsWZnpk6s/yABIU0jJeQsGvZalGXE+O6ZPAjBw6SJFp84CoHqd
      VJccpa3PAUBbWytC9XK+7rycEyzdMY9XYV/JBdYtnUOI2eSz4/okAE4v4LVd/e+REYLMRmxO
      LwCDQwN0NlajC49HJ+cES3eopWuAlq4B7s9L9elxfTIlMj4xmbaOqxs4m8OjiBrqxHKtrvdZ
      mujQx/OVB8MRQuCVc4KlO7D3dBN5WXGEBOhva87vaMZ9bdCopAzig/RUXehhUVqcnBMs3bbe
      QRvlTT3849P3YjQaR/+B2+CDALioOHWWwcFhyirrSIo00dB8CbfGSkTAEiIjo4hJSmKkqQm3
      NwaTXj53S7enqLKd+FkhZPqo6/Oz5Nqg0qRmd3r4u3//mKc3LGT14tk+PbZcG1Sa9CqaulGF
      YFlm/LgcXwZAmrQUVeWj083ct3TOXY/6vBkZAGnSarL0Y+m1si537h1PeRyNDIA0KQkhOHCm
      hYWpMcRFBo/beWQApElpcMTJydqLbF6RMa7nkQGQJqXD5W2kxISRnhg5rueRAZAmHZvTzaGz
      LWxano7RML5d5TIA0qRT2XQJh8vLipyk0b/5LskASJOKEII9pxrZkJ9KgHH8d/GVAZAmlebO
      ASy9Vtb4+K3vzcgASJOGuLbW56K0WBKiQibknDIA0qTRN+TgdK2Fh+5irc/bJQMgTRonqtuJ
      8eGE97GQAZAmBafby/6yFh4qzLirtT5vl0/O1NVax679RQA4B7s5fPgIRcVluFVBff15VK+L
      s2UVck6w9KWEgPLGbhRFJT87cULP7ZMAmMPjiQq5+sKipamdvNVrmZcYwMVLNpwuB83nyolN
      y5b7BEtfSlVV9pU0s3rxbELMvp3xNRqfdLSGR0Rc3yfYpTFg1mtQzWaEw02fpQmnPp5NSwLk
      PsHSl2rtGaS5s59vPbTEp/N9x8LnbxpmBah09I7gtvQQmpZEVFImc6NDKKttpWBBqpwTLN1A
      CDh4tp2lGfEkxoSPeYd3X/HZPsFut0JZZR1xWYtxWOrQzEolPtRIQkIiofFppEQY5D7B0hf0
      Dtkoq+9i4/K0Ca/8IOcES372wfF6iqra+fV3N6DTTmynpJwTLPmVV1H56HQTWwozJrzyf0IG
      QPKbsw1dCAF52Xe3zdHdkAGQ/MKrqOwtaWb14hTCggL8Vg4ZAMkv2noGqe/o48GCdL+WQwZA
      8osDZ1pYkh7nk22O7oYMgDThBoYdnK6zsGl5+oSN+rwZGQBpwh2raicqzMy8OdH+LooMgDSx
      9pxq5NW9VSxMi8Go9/97oPGfdClJXJ3tVdN6mfeO1QOg91O//+fJAEjjzuZ0827RefaVNLNp
      eTqL0mLJnh3l72IBciiENI5UIWi29PO7nWUoquDbjywjKyXKZzs83i2NRqORLYA0LtwehfeP
      17PzRD3356WybW0OwdfG+rsGO3ln1wFGXHq+9vzThBmvBkKobt77469IfejvyTR08MYHRYQm
      ZLBty2qO7X6bpq5h1m59moyYIJ+Vc3LciEnThhCC1u4BfvanIxyvbueH21fy9U1Lrld+gDMl
      Fazaso1nNqay53DD9a9fqCxGYzRhdSocLKpg+ze+yTxjDzUN5+gx5vCNHdspLzro0/LKFkDy
      GVUIPixu5J2iOgqyE3jmgUVEhAR+4ftSU2bxwduvExkF9qF5QDae4S5qunUU5CRxARAmPSF6
      LfEJsyjv6GZWQi46Qwh6k2/v2H0eAEtTFc1dVtwehXvWrKGprpIFWWmcPtvAisI8OS1ymrp4
      eYiXd5fTc2WE723NZ/n8xJu+5IpJXcI30vLoObefC4YsAEaswwz1NPL2qTMMJwawNMqDZchJ
      S2MXGQX3cqK0HkeyG4/Xt2+Off4QXFpSwrL8Ai63VmENmMtITz1at4eUxcuJDLyaN1W9OjFG
      O0m6wqYrr9uJw61gNps/3aNZqNjtdjR6E4EmA26nHS86zAEmhOrFZncSYA4a84XKq6gUVbXz
      xv5qslKieGFLLrNCv3jV/yz38GV2fbgPY0wmD63PY+97e9jw+COYAGtHBb3mHJIDBvlg514i
      05axfkUONacPUX6hn02PbCUm2DfzhrVarcbnAejvukBNczeKy0pcdiHddUfxaCNZe99qjFqu
      zwkWQvj9Nfh0pritvP7q6wRHhCNCUnli4woAzhV/TF23nZjENJZlhPLOziNoNYJ7Nz/OxTN7
      ueQAAmN58uF1jPbXuTxo49W9VTR1DvD8g4tZuSDx9nt4FAe9VpXoCN892I6V0Wj0fS+QMSic
      efNDaWtsJDEmDFf/HLJTYjlTXkthXs71OcGyG3R8aRQN5rB48pamU9E8jN5gANVLWV0joWFR
      mMxB9HU0svyhp8nStXGwuQ2XPoJnnnqIPR++i4KOQMOXt9BeReV0rYVX91YyJz6cf31xPXGR
      wXd2QTMYSPDfaGjfPwMYDXosXV2kLcgl1KQldW4aAaEhLEw3oaog6/zEEKqCXitoauskMCAK
      IUAjBB69mUe3bWf3B+8QEBVAkEGPTqtDFQKtXotGo0Gr03Kz+4Ihm5NXPqqkvKGb7fcvYENe
      KoZJMKThTvk+AOYwsueFXf93aGgoAGERE7fcnQSK24bVAdnzYzhb24PTZkXVB5AWGsip8moc
      Hh2Js9MpOn6Qi7oh5ixdT8eZBk6XnqbfZsRkuPFqrqqCsoYu/rSngtjIIP7lxftIig6d8rex
      8k3wdCUEvV2ttPVYyZqfQ1XRblILNxMXqFBXW8eslCwSIoPpbG3AKoLJSk1CcQxRU99CavYC
      wsyfbktqd3l47eNqjlW18eiqeTx8TyYmw9TvQddoNL5/CB4LGYCJJ4QAjWbUB9vP/0zVhUv8
      YddZggONfGdrPnPiwqb8Vf8TcijEDHI7ldbtVbDaXOwtaeLj0gs8WJDO46vnjdtm1f4kWwDp
      Bl5F5Zd/KaakrpPE6BC+/9hyslNmTZur/mfJFkD6gssDNs639RFo0vOtLbnMmyTDlseLbAGk
      66w2F7/48zHCQwJ4ZsMikmOmfi/PrcgWQLrO4fLwm7+ewmTU87ePLycocGKXKfcXORhHwuNV
      eHl3Of3DDv7bEzOn8oMMwIynqoJX91ZS03qZnzyzishRBrJNNzIAM5iqCnYWN3Cy5iL/8ORK
      Yu90PM8UJgMwgx0628o7R+v4wbZCMidwZ8bJRD4Ez0BCCM7Ud/Ha/ipefDiXBakx/i6S38gW
      YAZquHiFf3uvlG3rcli9ePaMu+35LJ8HQKgKfZd66B8aQQBOpwOEwG6zoU78KwfpM4QQtPUM
      8uu3TrJpeTqbVvh/bU5/83kA2usqaO8bornmLN2DLuob6vHY+yivuYCs/v41OOLkl38pZkl6
      HNvW5vhtV5bJZBwmxBjReEGrM6DXaxkZ7OVkqZWC1avRcuOUSGniDNlc/OsbxaREh/KNzUvQ
      aITcppZxaAFsHg8hQWbMgQZcDjc6vR6dBjzXdoj8pMmd6U3vRHJ7FP7t3VJ0Wg3fe6wAk0EO
      QfmEz1sA1etlZGgQz4idYCEIDI5gYeZcisvKKVyRh0F3NXNyLNDEcHsUfv9hOYMjLn76/CpC
      zCZ/F2lS8flgOKEqDA8Po9GbCDYH4vG4MRoNuF0u9EYTWo1GDoabIIqq8uePqzhVY+GlHWtJ
      iArxd5EmlXEZDKfR6ggNC7/+b6Px6rgSo8mPU/9nIFUIdp1o4FhlO//0zCriZ8nK/2VkN8A0
      JITgSEUb7x47z98+sYKMpEjkI9eXkwGYhsobu/nPjyr41pZcFqfHyg6HW5BDIfzJY+Xdt95n
      wOWmoXWQX/zzDzEBNacPUlrbjsOlsu3ZJ9n16p9w6/QUPPAkpktnKKrpxBQcy3PbH8H4uUtY
      Q8cVfvPX02xfv2DGv+UdCzkjbBIYajlNcV8smwvmAiBUL4N9lzl86CB5C+Kp9uayKUvLriNn
      UByDPPb4NsoPv0tU7leYG/HpRPWOS0P84s/HWL14NtvXL0Cnkw38rWg0Go38Dfmb6uHwmYus
      y5tz/Use5xDHDx/Hqw9BcTkICDKj1enR6DToDDp0GjAGGPF6P7129Q3a+V9vFrMwNZanNiyU
      lX+M5G/JzwYsDQTGZxGg0aB6XYw43LS1XGTRykKC1AFskfNpP/kR1WeLMYclE6nxUFrbSE3z
      AHHXrv5Wm4tfv32S5JhQXtiydNJsQTQVyFsgPxvu74agWEJMWmpP7MabsppkwxUqapqJTZ1P
      TmoCl9rrudDrZUXeQvDYOFNSSnJOAYmRQTjdXn791klGHG5++txqgmfQdMa7JVeGm2S8Xi86
      vX7Mq7d5vAq/ff8MbT2D/Oz5NaOuyy/dSD4DTDL626j8DpeHP39cTU3rZf7+yUJZ+e+QDMAU
      9dv3z7D7ZCPff2w5SdGh/i7OlCUDMAWpqqD7yggJUSFkJEfKvv67IAMwxQgBRyvbGBh28PMd
      azGbpt+CtRNJBmCK6R208caBczx1/0Jmhcn7/rvl86EQPR1NdPZaQaMjLWs+eGyEh4Vzpa+X
      8FnRn+5WKN02VQhe219Fckwo63LnyFsfH/B5CxAVl8L8+fMxKTbcQkNbexsjfR1c6LYi6/6d
      E0JwsuYiNa29fPOhXDmf10d83gLojSZ0HivDmnBygg1UW5rp6Y1j/X2rAIHX60UIgaqqck7q
      bRhxuPnzviq2rEgnNjwAt9vt7yJNC6MGQPV66OzpJSkpYYx91IIL9Y2kZS1EA0QlpaJzOugb
      dhIXakKn0yGEQKvVyo2yx0gIePNQJbERQTx8TzYGvfy9+croLYBQOHXkYwo3P0FMsBGD0XjL
      sSaqx8mQx0Dqtd28tVo9Obm5lJRVEZmfj0mvvb4ihLyHHZ0QgoqmHkrOd/LzHWsxygntPjXq
      UAivy847r/+BjiseTCYjj339+ySH3d0VSA6FGDu708MPfvsx63Pn8tV1Of4uzrQypjnBOqOJ
      1LmpeKOCKZwbSViQvGpPFFUVvH24hlCziYcKM/1dnGlp1Eu5126lx20mQm9FN9xKa79c0Gqi
      1LX3cqCshRe25E7LHRong1EDoA8Ixuzqo7ysnLdPXyZtlmwBJoLD5eGPu8vZWJBORlKkv4sz
      bY16C6TR6Vm4eCEDLh2ZS1cSJDvzx50Qgp0nGlBVwaOrs2VnwTga/RbIYWX3wVMsK8in7tC7
      tI+oE1GuGa3Z0s+ukw28+JVlciW3cXbLFsBjH6KiohxVo6e7q4vAQDPy1dX4cnm8vLK3ktWL
      ZjN/drS/izPtjd6fqTUwLysdoapEpc0jyiCb4/EihGDPqSaGRpxsv38hWnm7Oe5uGQCDOYxl
      uUuoryimqrqa6uoqht2yF2i8WHqHee/YeZ7ftISwIHnrMxFGfwjWapg7v4CcBfPRABFmeVUa
      D26PwisflZOfnUBeZry/izNjjD4UQlXpbKtnYOAKAKs3PU6MXE/Op1QheP1ANR6vyvMbl8g1
      fSbQ6IPhBPR2tqFcGQYg3yNgzFO3pbEoq+/iSEUb//zCfYQHy1W0J9KoY4GEqtB7qRv3te6f
      qLhEAvR3FwA5FuhT/VYH//j7gzxybxabV2TIPv8JNKaxQKrXTfnpY/Q7oOtiB1/77o9ICpF/
      JF8Q4upYn8jQQB7IT5OV3w9GDYBWb2BB7nJcXugKcDPkgaSJKNkMUNHUw6laC/9jxxoMetka
      +sOoT1uq4qWxtpLKykr6zXPJCLv1Vcptu8KJoiJOlpzB7obauhpUj53S0nK8quxC/cSw3c0r
      H1WwpTCT1PgIfxdnxrplC+Do7+Qv77yP/drsO1W5SM+KVaSE3zwEbefrMUVEEmwOJ8AAHo+b
      hupKkrOWoZcvdoCrtz7vHK3DZNDz8D2Z8tbHj24ZgIDwOL72zA6sV3ooKyml2+olyHTrP5Z1
      2E7c4oUol5pptgTRZ2nCZYjngaVGhBDX9wmeyXOCa9t6OVLRyo+2F6LTCDm/149uGQCvY4gD
      H+1DmKPJW72Jh2LCR+0ATYgPp3fQRYzRgEejISopk7S4cMrONbNicQZ6vR5VVdFqtTOyF8jt
      Vfivj8+xdukccubK7Yv8bZTBcFbaOjpwKRYaaysAePLFf2B2+M0fHeKzluGsr6ZPG0FOajgD
      gSkER0aSTjdur4ppBk/oFkLwzpE6hIAn1+XIyj8JyOXRJ1CzpZ+XXj3KD7evZHFanL+LM+PJ
      5dEnkMer8PLus9y7MEVW/klEBmACfDLMedjh5sn75MoOk4kMwASw9Fp5p6iOr29cQkSIXNB2
      MpEBGGcer8Ifd1eQn51IXlaCv4sjfY4MwDgSQnC4vI3OPitPyxlek5Ic2T9OvIrKyx+Wc/Bs
      C9/dmifX8p+kZAswDlRVUHyug8MVrSiqSmJ0qOzzn6RkC+BjgyNO3jhwjlO1F3ls9Txmx4aR
      kSgXtpqs5IswH1FVQWVzD3/cU06o2cR3t+aTHCOv/JPZmCbESKOzOd28daiGw+VtbL03m4fv
      ySTAePVXO9TTwqHjZ1GConj0wTXodVoU+wD7DhzG7taxZtNmgl2XOXS6jlXr1hEeqKW8+AhK
      ZDp58+Yg8zO+ZADugioE9e19/N8Pyggw6nlpx1rSEyNuuOqfq60lZ/ka4iKCru+PdrmlnsCk
      HO5NTyDI6ObN94q4f10+H+45wPI5RvqMCVBbRHNsLBmz5MPzeJIBuEMer8Jfj9Sy51QTG5en
      8/jqeQQFGr/wfQEaN0f37cIQGsuz27Zg0ICq09FQcpT6MjOPPryKiNnpJCRnElRRy2Wrm6XL
      swiN6eeAZVgGYJzJANwmIQRNln5+t6sMRRH85NlVzJ8TfZN7fUHu2kdZtk5D8Zv/jw67m7Rg
      E/FZeXw7O5/BhkMcaehFcboQQsHr8iACjbg8XkaG7QSYps8z0mTl8wAIVcHpcoNGg8lkQqgq
      Oq0Wr6Kg0+mm9EOh26Ow+1QjO080sCIniafvX0joLVdwE1Qc3Utlaxc2xcw3tU4qay1Eavo4
      cKoG+4iLLc88S/Oxnbz8hxoSc+5l4RwDf3nrFTyaQJ7bcd+EfbaZyue9QMOdNRSdt5IQFULW
      /ByazlexIHMOpytbWLE8F71WMy69QO6hTn7/2kG+9TfPEwDYLjXy1u5jqIqH0ORFbFgYyc79
      J4nLzGXjPYs4/OHbdAzCxq1PEB/6xVuXzxJC0HF5iD9+WE7voJ0XtuSyLCv+tsPc39lArxJF
      Vsqsu/ikkq+MSy/Q0OAwWq2KPiCIAL0Gt9NGeXkNC5etRKf5tAv0k2mRvqFSdPQUWo3Ao6oY
      gcDodHbsSMdSfYg2QzpFxYd57KnnKN/3Ni1NHnoDl/JEoYmDxad45MFVNz2yx6typLKNNw+c
      Y2lGHH+3bQXhwQHXP8PtCI/PIBx8+Lmlu+XzACTlFJI0X9BaW0pLTxSOkUE8Ihij4epLZ99X
      fuiuK0E/eylxQyWoqsr1I6tOiuuGeGzbLHY36gnSa4iJjaCzpYXotEcIMDtRRPNNy3J5wMbL
      u8tp67Hy4leWUZAVj/ZaCyZNDz4PQE/HBRwY6bc6iU0wEhaVyPzURErOVFFYsBi9Toeqqmg0
      Gp/dAvUNDtLceJ6qkjOYspeypWAeABdrqkhakIdJr8fg8WL1qHR395OxdAHFDU04QgLR64PQ
      62/8NXgVlWNV7bz2cTXz5kTxy+9sIDrc7JOySpOLz58BVK+LTksXxtBZxESGYrfZCAoyM2K1
      EhAcOm7PAAAVp0uZvyKXgx/sY8PWLTSWlTJncR7BBi1DPc3s2necxPnLWZefTfH+92m5orLp
      ka1EB326Ad3QiJOXd5dTfeESzzywiPty56KXi9VOSxqNRjPthkII9yDdw0YSZt3eFVtVBSdr
      L/LKngrmxkfw4sO5xEQETeleK+nWpmUAbocQAq+iMuJw8+bBGkrqLDyxdj4bC9LljuwzwIwP
      wMCwg5+/WsSlARtzYsP4ztZ8UmLD/FomaeLM6MFwiqpy8Gwrrd2DRIeb+eH2e4gMlcMOZpoZ
      GQBFVXl9/zkOnW3hxYeXkTM3Wlb+GWrGBWDY7uIPH56lydLPT55dRWbyLPmgO4PNqAD0Wx38
      +q2T2F0eXtqxlrjIYH8XSfKzGfMQ3Gzp51dvnSQtIYLvPppP8JcMXZZmlhnxECyE4GxDN//x
      wRkKc5J47sHFmIzT/mNLYzSta4Kiquw/08Lr+6t58r4cthRmyrV5pBtM2wB4vAqv76+mqLKd
      7z9eQMG8RLTyYVf6nGkZgBGHm9/tLKPJ0s8/PXMvWSlR/i6SNElNqwAIAZcHRvjNX08jhOAX
      L6wjKkyO4pRubloFoLV7gF+9dZKU2DC+tzV/lOmKkjROSyMKxUXXpSsA2Gw2EIJh6xDqOPW4
      CiE4VWvhpf88yvJ5ifzwaytl5ZfGxOcBEELQ1lDLibJKAJqaG3FaL3Gu0eLrUwFXe3r2lTbz
      2/dL+eq6+Tz7wCI5fl8aM5/fArmslxhQw0iIdAEw1NfFySvDrFyzGg03bpN6t+/gPIrKGwdq
      KKpq42+25pGXnYAQKl6vnLIojY3PA1BZdga7IZyO1hYSZmcSGByKcAvsLg+mQP31cTdarRat
      9s6v1MP2qz097ZeG+Nlza0hPlLutS7fP5wFYsf5hAE4Y9KQmzMLaG8zCxWkUny1nxYp8jDrt
      9UnldxqASwM2fvP2KYQQvLRjLTERQT4rvzSzjNtYIK/Xi16vR1EUdDotildBe21hrDsdCySE
      oNHSz2/ePklG0iy+/UgeQQEGOZpTuiNTbkZYSZ2F//igjLVL5vDUhgWYDNOqF1eaYFNiMJwQ
      gt4hO6dqLLx1uIbnHlzExoJ0edWXfGLSB6D0fBf//n4pbo/Cj7avZGnm7S9JKEk3M+k7zO0u
      N8N2F/nZCeRmxssBbZJP/X9hwSe+Mp+LiAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='MarketShare' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Rev/Profit' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2dWYwkx5mYv8ys+67qrj6mr5me7pnuGR4iKVGkRFESdXhp7S60MBZew8bC
      hmEDfvarH/TsVwM24Ac/GDAWC3uxu9pbWpFciaIkUkMOyeFc3dP3Wfd95RF+6OnqqzJ7jpru
      nqn4gOIwo+OPiMyMPzPiz/jjV4QQAomkR1FPuwESyWlyIgpQqVROohqJ5KE5EQWwLOskquk5
      9HqRX77/Pjfnl23zVAsZ6roc5drhOu0GSB6d37z3cy59620++slfUdjcYOp8H6mGh1JqGV+o
      j0IhQ27xCwKXvsOQO0eupOMLaAgdXn/jDVxyACznAE8zbrdGq6UjUMimt6kUsyzN3yFVbHJv
      /i7DU89xZWqMqekprn30IV63xsbGNl9+7XXZ+e+jnIQVqFQqEYlEnnQ1PYfRrHH908/4/M4i
      3//Gl9nKFEkODbKxmaYvEWXg3Bh+s8Ln89skgoJc1SISCXDxwgVURTnt5p8J2gpQLpd5UrpQ
      rVYJBoNPpGyJ5HFozwHC4fATrUi+ASRnETkSlPQ0UgEkPY1UAElPIxVA0tNIBZD0NFIBJD2N
      VABJTyMVQNLTSAWQ9DRSASQ9jVQASU8jFUDS00gFkPQ0UgEkPU3XXCLLhQxrm9tYqp++WACj
      0WBwbAK3Kh0vJGeXrilAONbPYL2KERhg6caviAxNM6KAaZqYpolhGN2qSiLpGl1TACEsUsUG
      l4f8lIdGqNVKCEDTNDRNw+WS/veSs0fXfIKFsKg3mgT8fhqNOhoCU/Phc6vSJ1hyZunaY1lR
      VAJ+PwA+386/7m4VLpE8IaQVSNLTSAWQ9DRSASQ9jVQASc+SqValAkh6l5ViXiqApLeRCiDp
      aeTnWckzjxCC5v6lOAr4XDtfqaQCSJ55dMvklytL7WOXqvLNCxcBOQSS9DhSASQ9jVQASU8j
      FUDS08hJsOSZothokK1V28cRr4+Iz2ubXyqA5Jmi1GywmM+1j0ci0ZNRgGYlx62FDUbGJqhX
      crRqdSamL0ufYMmZpmsKsL68huZxk8/nya/fJTZyBZf0CZacMKZpHgjMblkmpnEwTQCGYWCZ
      VvcUoD8Zp5SpYxo6A6OTNKo5WuYwXpf0CZacHJqmoap7th1V1dBcB9MUVcXlcqFqahd3hUiO
      Mhtt4nJ7URAoCARy+CM523TRJ1jB6/XtHu37r0RydpHfASQ9jRyYS55a7mbSVFut9vF0X/9D
      lyEVQPLUUmo2KDYa7WN9n6XnQZFDIElPIxVA0tNIBZD0NFIBJD2NnARLzjxNw+DjjfX2sUfT
      eGVktCtlSwWQnHkEgpq+Z+40LK1rZcshkKSnkQog6WnkEEhypsjXa6Srex5dcb+fsNfeoeVx
      kQogOVOUmk1Wi4UDaU9SAeQQSNLTSAWQ9DRdGwK1Slt8PJdm8sI4eqOMXqszMjklfYIlZ5qu
      KYBugN+jUqs32F68TezcjPQJljw0R3x6zaM+vZaitH1696fv9rVT8QnG5WUw2UcmXyJ5boJ6
      tYBhjeCWcYIlNjQNA2tflF6vy3XUp1c76tOr7vPp3Z++G5P6VHyCA6EIjVaemUsXEZaJiuDh
      V2dLeolPtzYoN5vt4y+PjJ14G7rnE6xq9PXf98jRdrStex+sJZIng7QCSXoaqQCSnkYqgKSn
      kQog6WmkAkh6GmmclzxxhBC0TLN9rCgKHu1s2AilAkieOHVD51cry+1jn8vF1ycunGKL9pBD
      IElPIxVA0tM4KsBPfvKTA4uIJJJnjY5zACEE77z7DrVaDbFvsZJE8qzR8Q3w7nvvoigKsVgM
      RZHr+SXPLh3fAG99+62TbofkGaHcbFDat8Iz5PHi1s7uVNPWDPrxB++gRocIB6JcvDBykm2S
      PMVkajUWctn28UQszrlI5BRb5IytahZLBT764D1y5foJNkciOVls3wB9/YNUDQ8DyfgDFSSE
      YO6TX6Annydg5GhU60xduSp9giVnGlsFODc+STxZZnMrxcRw37EFZTeXsdwhmo0Gla0FGSe4
      B1jI52jsu6+T8QTWIZ9cs5NPr2Xt+ORah316jbPjE7y2NM9WtsILr77xQBcjGElgNKtUmiaD
      Y1Po9TwNYxi/W/oEP6vkGvUDMbouJPpQD/nkak4+vephn94z5BOcSm1j4KNerwPhYy+GPxTB
      H7rK0LE5JU8bdV3ni+2t9rHP7eK5weFTbFH3sFUAyzTRLR3Lkh/Ceh1LWBSb+4PRuU+xNd3F
      VgH6+xKo0WHYty+7RPKsYWsGrVQr/PaD9yjW9RNsjkRysti+ASLROLMvTvDi7PkTbI7ktNko
      Fdksl9rHw+EIUZ/vFFv0ZLF9A/T19bMx/xnXby/bZZE8gzQMg0Kj0f41nnHzte0bYHNthedf
      e5O+aOIk2yORnCi2b4C6IciszzG/sHSCzZFITpaOCmCZOqOj4yhakInzJ79fo0TyJCiWmzSa
      B4d0HRXgo1++x9rGOp9/fgu0Z8fmK+ldytUWf/F3c9yayx5I76gAzUaVra00ptmiUqmcSAMl
      kidFvWHwD+8t8vLzg2xuH+zPHSfBb37/hyfSMInkSaMbJv/tzz7k+Zkk05Nxbs1lMYy9hXFy
      hVoPczO1TXOfmXM2OXCKrek+lhD86U9v8sL4EIlRN4qiEI14KZT2PNbOrq+a5IlTbNTJ1Wvt
      n/kMbYAghODDTzYZioT5/a9fbvu2jwyFWN8qt/NJBZA8U1iWoNE0uP5FilyhwVuvT7BvJTTD
      gyE2t/cCccshkOSpxjQtllaLpLN1fv6LNQrlBjomyUSA731jAvWQR2Is4qVUaWKYO/OA7oVJ
      rZVZWF6lf3gct2IiDJ1gvE+6REqeKDfnsqxulLh8sY+3ZidxeRXmcxnb7Xw0TSUUdLOaKgJd
      VADN4yfZnyCVTiOaBYQrzJVEH5ZlIYSQO8ydQYQQBzY+E8LqkCawjqTtuDXygPJH02j3iweS
      tw6mcV/e0C1u3s3we9+bwu9zkYj6qNz3UNvN30l+aDDIzaU0Q+P+bgbJU9F1HSwLvdVE0/a8
      yA6flORkaZoGy4V8+9iruZiIxRGCIx2zUwc83NFht1MflT+qFEcVYFeeB5BHCASHyrx/fGsu
      w8RoFJ9XO9CeI3Udkh8ZDHFjLsXQ2ET3FKBezpMrlIknh/ENxFEtnYYh8Lt3/Da1M7IffC9i
      Gjob5T3LR8jjYbKvH1VVjvjaHvbT7ZSmKAqapqF0kFe6IK8oCstrJcZHIu3yDssbluDazW3e
      /t6F9t8613U0LREL8Jv8NihK9xQgGO3jSvT43SMkkuMwDIufvb/M1cv9THy787Y873y8yLmR
      IF7Pwz9Y3S6VwUSQtXRJmkElZ49G06Qv5iOVrrK4Ujjy92bL4J1ri3ztxdFH3rv26vkBFtcK
      0gz6rFFs1LmdTrWPx6Ixwl7vKbbo4SmWmyTifr784hA//tldLo30H/j7jbsZXrl8jlDAQ7HR
      sCnFmecuJHnviwX5BnjWMC1BpdVq//bH5npayBcaxKM+An43b795kf/+5x/Rau2ch66b3L2X
      55+/Nv1YdYwNRKlVDakAkrNHvtggHtvxQ7401sdbL03y89+sIoTg5lyWqYk4keDjvdUUBYYS
      ITkEepqZz2bYruxZdy4m+s9M9MXHoVhuEgl52sffenmCX9xe4pMbKeYWcvzhD2Yeuw5FURgd
      Css3wNOMbpo0DKP9M8Uz8LFRQL1uEPDvOWIpCrz51VHuLuS4MB7D5+3Oc/vcoHwDSM4YjaaB
      y62iaQetO263xh+8fQmX1r2lNYl4F78ES54sN1NbB5YrX0kOnmJrnhzlaotw0NPRvPkoNn8n
      NK2LH8IkT5ZUpXJAAZ4155VdCsUmscjJmW3lHEBypsjka20L0EkgFUByplhLl0hET04B5BDo
      jJGr1fgitbcXf9wf4LnB3om6kC5WuRJ8sLBc3UAqwBnDEuLA11vDevq+5D4qQghK9SZu18l9
      y5BDIMmZIV2s4fO5jrgxPknkG+AUaRoGxj5POe8z8BX3cdjIlEmc4AQYuqgAptFiaXGRvqFx
      XIoJpo43HJM+wQ7MZzNs7VvKcGVgELfau0qwni5xrv/4eHTdpIsKYDAyNs78vRV8HouGrnJ1
      NmbjEifZ5bCvKxz1f93v33ow79G0w+5/u1mPpAnRIb1Tmr38kfrplNahnTbya+kSL1waOCov
      HqL+Dnlt5UUXFUBVLO7cXeHy7AyffvQLAn3jAO1YsOZTuCy3m5SaTdq9Foh4fW3H8F1My0Tl
      4M3avXZH8pomZgd5y1SP5LNMs2OZ4kiZ1pG8TvJH23RU3rJ2Yvc+iPxausQ/e32SVKN8MK/1
      4PV3zHsoTeyT75oClLI5hAqZXIEL01fBbN73CZZxggGuLy+y/xn07cmLHeLkamjq4Ti5ezF1
      999EzaWhdZLvFKf3SOxcuzi9jy9/OE6wqj6Y/I7yQDToI9OqHsj7OO3vJP9AcYIflsS5cRLn
      ulWapNfQDYuI3/vILo6PSm8/lp8AlWbzwMQ26PEwHI6cYoueDorlJsN9YThhm4lUgC5T0/UD
      e/Akg8FnUgGEEJTKLW4upgn63UxOxB6rvHyhwWjy8cp4FKQCPAY3U9ukq3sBF2af0SXKu5im
      RTZfZ3W9zN/8ZIGK3mQgGWB+Mc+F8ehjlZ0vNHh14mRNoCAV4IEQQhzxttIUFdOyDnzIEgiU
      k36HnxCWJfjZ+8sYpuC5qST/4Xuz3CmkqDSb/L+/vkNLfzxvtEK5STIWBMSxebuJVIAH5J8W
      Fw4cvzU5dUotOR3ml/KoisLb375A0OMmHvZDYce3Nhb1USg+2vYksPOAKVdahEMeKkbzeIEu
      IhXgENVWi2xtzwwXcHvoCwROsUWnT6Wm88mNFL///Yt0MtIMD4bY2H70WHIt3UJVFVwuFU44
      LrdUgEOUm03mspn28UAw1NMKIIA/+ekNXn5+EL+vc8TQoWSQ3366eWxZ2+kqfp8LX/xgt6vX
      dQK+0+mKPa0Ad9IpcvVa+/hy/7PpZvg4fHxnk1KjydXzw7Z5YhEvpXLLcbmLEIJff7xBs2Xy
      Rz+YPfC3QqlJ7ASdYPbTE8uhhRAU6vW9X6MOQMMwqOl6+2fIGAYHaDYN3v1wmX/39pdQHT5Q
      uVwqAb+LYtl+/N5qmTRbJs/PJPnH95fbEVpgbye406AnFMASgmsba+3fx+vrp92kM48Qgg+u
      bfD2V6dIRI7vnIPJIIsbRzey3WV9u8K5wRAzUwn8AY3/89PP2waf3L6d4E6aZ24ItF0pM5dJ
      t48HQmEuJuS27Q/L2maZarXFlen+4zMDwwMhbq9kGBvvbMtfXi0xfSGOoih84ytjfPThNpUv
      6lyeSlC5vxXKafBUvwHWi0XuZtLtX7XVwrQETdNs//QeX4X6KOi6ya+ubfDGV8c6Wn060Z/w
      c28j1/FvliVI52oMDgQBcGkq/+mHX2b+XoGNrQqNpoFPToIfnlS1cmASm/D3rrWmm1z/IsXF
      idhD7c/j9WpUmzr1pn7kb6lsjUjIg9u197wN+jz83nem+N8/vkEo4EY7Jcepp0IBTMs6sFOC
      qqg9tVPCSVKutFhcLfIHv/Nw248risLFkThzazlCh8ycn8xtMjF6dKlEKOThu29MkM7VH6vN
      j8OZU4Ca3qLc2LMm+N1u/G436erexylNeapHbmcWIQT/+KtFvvLiMG73w7tmzoz38/nKNq/E
      D66Jun5vm1de6WxiHh4MMTwYeqT2doOu9SRh6ty48QWWgFwuS2ZrE91yXtexXiwyl820fzW9
      Ra5W50Zqq/1bLxW71UTJMdxczrBeKHF+7NFWr85M9LO2VTrwPaBYaVBrtggFO39EO2266BNs
      omkKloDlhTv4IsP0De641DUNnWtrq3uVqjtDmM1ykXx97/UX9/qwLPNATGFLWG23yl1Ulftu
      dgfTd/I9gLyi7LjEdZI/lCaEhXlIfq+ug+mmaaEqHClzpy5x1H3wkLxlWljYyx+uq5O8qZod
      5A+fp7jvErhXpmkK/uSdz/nhW5doCb3dVid5caj+WMiLMMAwTDRt59n62b1trpxPHvALFzby
      u/fuyD05VL9Q1bZL43HyopP87v3vpkuky+vDfX/ran8giK7vBCzecUVTyDf2Orr7vouaoigH
      PIB2w2YeSFNUVPVQPkWxlxcH5VWlQ7778uqhdFVVEKJD/Yfy7Z6Xoh6VP1qXeuSc7OR3jjud
      /9FzsJNXj8h3uqZHr9+t+QwvXRxmNBlhMZ97QPmD6ZqqMp6MUSy36Iv7Abi9lOVff/sFUmbp
      YDs7yHe61qqitEOnHq7/8Lna3Ws7eUVRuzcEqpcL1OotNrdSnBu9wORokoYhdhqw25DdH7uN
      VI6kH03jSBoPIc/huh3kYa9tTvLt9MP1K0flFYXO10CxkT/ye1z5fWUcOd75t94wuD2X4wdf
      m34oeY6kK0yNxdlKVVEUBSGgVjGYGIp1vKad5Ol4zAPJH5Y9Tl5RujgE8odjvPDiyXv0SB6f
      D69v8sKVJD6vi+JRK+ZDMTwQ4jdzazw3kySVqTF1ru+A+fOscXZbJnkghBCYxxgbnFjdKJEv
      NLg0mehKe/rifvKFBpYlWFotcvlCd8p9UkgFeMoplJr86V/eoqU/3BdvIQT3lgv8+uMNvvuN
      813bj9PlUvF6NSrVFqubZcbOnW1/aKkATzEC+PW1DaJhLzdup4/Nv1/uZ9cW+fCzDX7wnYuE
      Q91dh5PsC7C4WsTtUrse1qjbSAV4itncrmBagu998zxziwVq9eMH8ELAL66t8tHtdX74/UsH
      ojF2i3ODIa59usX4yMk7uT8sUgGeUkxT8O5vlnnt5XN43BovzCb5xbVVRxnLEvzyozUaVZP/
      /Edfw9+lcKOH6e/z09JNxkceb6eIk0AqwFPKr2+uoXhF294+PRnn+sImW7nOvrmmZfFPv1pF
      CPjuG+fxPMEgFEG/m1dfGj7xrc4fBakATyGGYfHjX97l+69Nct+sjUtT+e5XL/B/373ZYSdk
      eP/DdTwelTdeHUF9wnddURRefn7oRANdPCpSAZ5CbtzJ8JWZc/RHDy7/fml6GGFAZt/qSgH8
      2bu3UYDXXxlpfwiS7CAV4Cmj0TS4PZ/ld1+/dORvqqrwh29d4VfXNtprj/7in26TLVd549XR
      p+KJfNL0rAIIIahUW1z7bIt3f7mMbpx9h3ghBB9/vs1zl/vxeTuP4YeTIbwejbWNMp/cSGE0
      BP/+d1+Wnd+GM+cP8LjUGjq357Msr5WIhD3MjPUTdwX3RRSBtc0S//U3H7CWLTJ5IUo04uPv
      31nghX81jKqdvY4ihMASsJmqsrZZ5l/84LJj/ldfGubv3lmgP+HnP/7+K7jO4DmdFZ5qBTAt
      i1pdp1RusbpR4u/Ti5iWIDnoZ3a6D103Wdsu87/mPmE5U8Dj1mi1TIYGgvzbt16iojbI1KoI
      IfB6NP7nn3/MH//e86d9WsDOcudcocHdu3n+PrfIwnaOSNjLN18bO9Z9MB718aWrA0xOxNBk
      53fkzCuAAAqVBvNLeVbWS5QrLUxT8DfaPWq6jupSCAZcjJ2L8C/ffA6PR+N2JtWWHwqFmUkO
      8LP5OZqtnXXqPo/GxZEEn25uADtWiyuX+siFW/yPP7vGt74xhu8xbOTNlkG+2CQc9NB/jJuy
      ZQnqDYNCqcH2ap10tsb8Vo5myyQW8XJ5vI9/870XuFPcRijigSexVy492G4Ovc6pK4AlBHrL
      xDAFqUKVcr3JVrpKo2GwmaqQydwj6PHgj6hcvpggGvHic7v4zvQ0n29vHnCKDwe8B4JM70fT
      VAL+3SnP0U6kKArfeuk8Ub+Pv3rnDm+/NdlRCXYcO8AwLXTDoqWbtFom2+kqt27k2EhXyFdr
      +P1umk0Tt6bx4oUUwm8wkAyiqgr5QoO/3p7j+r1N1rNlPG6NWMTL8xNDfOXqOS5ciuC/Hy+3
      LxBgdCDCfCWFKeMMdp1TUwDTsphbzPH+9VUMU+Bxq3waTqOqCjWzhcetMTQQ5He+OsWLo8P8
      fGlvd2ZNUXFpT2b+/uLlQZaKOf7yH+YZ6A/gQuVvtQXWC0V0w8IwLBQFfupbpm7oGMLC7VIZ
      7A/y+swY3//qRVYqufZ6+IDqxqN7+JuP7/DRp1tYQtAX8/PNK+d57UsjCI+1sykse2FS61sn
      u0NyL9M1BbCMJnfvzjM8MQVGHaHrBBP9R+IE1xsGn95L8eO/nSfW5+XbXx8nGt6JDfXS8Ag1
      XefOviFM8AmsVTmOixMxEjE/zabBUDTM1aFBPtpYxe1ScblUFAW+c3GaG9tbbN8Ph6QoClcH
      kygorFZ3nS4gFPDwwtA5Sq4q1v2JuKIofHtyklup1IFwSpKTp2sKsLG8wsjUJTYWlzBaZRR3
      hNm+/rYvpltRWFov8dEnm8xe7OO//PEbrFTyFBuN++FxBSBQAbeqgtgZ72qKghAW7n3ePJqy
      4xPqUhU8qtqWVzrIuxQFIcQBeUXZ8Ql1KTvyO+I78goCr6YxGPeDopAMBhmIB4kVPTveRffP
      17IsNEVpR3ffiTsrUBR22iQEsNN+y7JwqypC0P5ya5oW2v28++VBHJB3KWpbXrWs9jlYpoXK
      QXnliPyOnXtXfrftrvvn71bVA3Uh7l8/ZddbDlQULEvgVtS9r8678op6oC6EQGvLs3f/rIPX
      333//nWSV+//HYS9vHpYnp38Dyjvui/vUlQU0aUI1qv35kiMT7K2uECzlkf1Jrg6c3En+EG5
      TDAYxDB3OohL2znp/RM6eXz8MdBOe5jjs9y2TsdPqo2djrv2BhgZH+P2nVsMn58Cox/V1O/H
      Cd5xSHa5XPR4qGDJGaRrbwAnSqUSkcjZ9gyS9CY9uxRCIgGpAJIeRyqApKeRCiDpadp2mXK5
      7Bjk7HGo7tvZeZfDZqndNKBj+oOmSfnHk++01uhpkoeHO/+2AoTDT9aD/7AVyLKs+/uG7jV8
      t1GHG3skr6Ig9qXtz7cnL+5/eFIOyB9X5nH1O6XtbgD7IHk7nf/u/9vndT6nR63fKa1jWx2u
      /+FzepDrvz/tca7/o8ifqhm0Wclx4+4Kmqbg8gZ5bsY++vrG8j1ypSqGYZIYGmd82C7ul8md
      L24hNJPNjTqvv/kVfDYO4M1qgbsL65TTKWIXp5mdGO2wTG6HrfUNvB5Y3kjTNzjK2JBd/RYb
      6ymatTzFaovp2asEbVaW6o0K2VKd7fU1NF+Qq7OXbOvPbG1gCYutXIlIJMH5MfsAITc++S2B
      xBATYyOOS6e3F++R1i3GR0aJBP22+QBWF+fIl6sISzB8/jIDMbtlrhZffPYpuqVgCo2XXnre
      dpxt1EvcuLtMtVpmdOIiEyODNjkhvbnC1tYW5ZaL2atXiIfsHO4F9+7cwkCjZVjMzs7gsrkG
      RqN8unOARrnMucnzRMJ9aMJ5T5tKw+Bcf5zRyfPUyk5RyVXiiSguj4uBwRG8Dovm3P4QQb8b
      t+ZlbHzEsf5yPsvcvQ1mrl6mUrSPhgiCrfU1inWL8YEo5arTwjZBamudlqGg7y4JscHSmywv
      reANBKg3nCOquHwhRpIxFheWcNovrtXQOT81SSW3zepmyiEnVKp1aDYIxkKUijWHnAatFtRr
      ddyWidNdrWSzBPsHiETiNMpO1xRy+TKDw0n6E3HSW1mHnCbVmk4i0YdqtGia9p5+zUrldN8A
      O3vvg0tT2N5KMThk/wQwDANN00DopDMVBgac95zUmzUK+QrBeJyA12lBnaCYzaMrCn2JuO0T
      WAhBq9nC7VHJZEoMDNhHnrQsE90wMZtVDDVAJGgfa6vVrFMq10AI4sl+bDcrEYJKpUTL2Fkz
      lEjEbctsNpt4vV7KuTy+RBy7s9ebTTSvFxXI5/LEHco09CYN3UJvlLGEn74++yFzrVpG1Vxk
      tjIMnB/Ddt85Icjns/iDUcqlAslk0rZM02iRL1SIx0Pk83X6++32HBKsL85Tx0siHCQUj+Ox
      eQgKSz9dfwC9luf6rVUiIR+pbNFRATaW7lE2BBoG9abHQQEsPr/+CW5fkEo2w+hzL9sqgF4v
      cv3GPcLhAOlUnq+9+bptB9xauUemouPWBNU6DgoguHXjMzSPn0a5QGJs1lYBzFaVzz67RSgc
      Ir2V5bVv2StAemOZ9VwVn1ujVG3xqkNnXZy7BS4fmbVtXv7uN20VoFnNcvtmlpDfTa5Y5Wtf
      fcW2zOV787TQUGigmwkHBbC4c/MW/nCEzMomUQcFaJTTzC1uEglmyOTKjgqwunCPmqWQyazR
      1EMOCqBTqFp4tBKlVhNCERI2ClDYWAVxAhSLxY7plmWJbDYrhBAinUo7lmE0SiJfaQohdJFO
      5Rzz5rIZYQohasW8KNdbtvn2159JpYXpVH+zIvKlmhDCFOlUxrH+fDYrDMsSzWpJFMr1Y+rf
      KSubSgvDoUyzVRe5YkUIYR17rUr5nGgapiik0qLpkM8yDZHN5YUQx1//eqUgKg1dCNEU6VTB
      MW82mxGWEKKYSouGU/0Pcf+btaIoVVtCiJZIp/JOpYpUKiUsyxC3Pv1UVHT7q2rpdXGqb4Bm
      OcfK2ibpdApDuOhP2rvxbW2mKDUMtqwWgfg5h1ItttbXSKUz1OsNpmev2ubUayVWVtdIp9O0
      TIWEQ/2Z7RSZSpMtTLzhfuxz7ozrt9Npmo06E9NXbHOarRqrK6uk0xkauiDmUH8+nWKjUCOl
      Clz+qEP9sL21jrGdol5v8YJDmZVcipWtPOnUFmh+x+u/vblJ3VSw9DrxIXtjBZisLy+TTmeo
      VBq86FBmo5BieSNLOp3CVDzH1L9NpWWB2STcP+5QvyC9uU4ul6NmCFy2g1po1aqn/CFMiPbE
      77iJiNg/VTkmczvvsdObRyizq3nFXhOPaevBMh8w7/EXdV9Ljst6cHn1Axb7QGV2N+/BWGxO
      UoJT9gl2+/14VIVz45M0ys7RIIOhIBWjzqXLF8mmSw45FUKhIKo/xviwG9PhwnlQIYgAAAeQ
      SURBVLk8PrwujaHRCfRqmftuIR0JhELk6yWmpqfJZ5wtFsFQENMV5MLYOeqWvRVCdXnwe90k
      h8egUXW8Wf5QELXUYHL6MoWskxUEgqEQTbwMxd2YYDuv8AaDaBSYmLxEOX98mXpDMH35AumU
      kxVKJRTyE0gMMBw3MLHvZJ5AEBc5Rs9PUSvmj6k/SL2ic+nyJJn00Q+r++sPBgN4wv2MJBUs
      h6vq9vlP9w1QTqeIj06weu8um9vO+9tvp/OcH45zZ36BjGMHNKk2BFqrxPLKOtUOkct3qRWz
      BPvPsbE0z+ZWyrEDplJZxkcHuDs3TyaTc8gpKFd1/KLB4uoa5Yq9GbRVK+EO9ZNeW2B9Yxun
      rbnSWxnGJ0a5c+cumYxzZy2W60TdJsuLKxgO+XIbW4xcvMj87VtspzKOZWbyZYZjXuaWl8lm
      nR5ALZqGh2YhxfLSGi2HnIXNTQYuXGRp7g5bx9z/VLbIeDLMncVFso7336DeUrGqOVaW12g4
      bHhWzqTQfvSjH/3IseYusGuWO4w3FEYxLYYH+9ENi2jU3mcgFPSjesOEvSqaL0AoYPchRMXn
      89CXHMTQm0RiMdw2VgC3P4iGYHhokJZuEItGbN8AoVAQxe0nFvCA20fY9sORgs/nJd4/gNBb
      hGNRPDZBpzXPTmTNoeEhWrpOLBa1rT8YDoLqpj/qx1LdhENBm5zg9/sIx/sxTZNoLGr7lAtE
      I1iGYDAZwxQqkYh9wOpgwIc3FMeLiS8cIeCzs+248PncJIeG0PUWsXjM9g3kj0YRusnQQALD
      gmjE3rQaCvhxBaIEXeAOhgj67UzLGj6fh/7BIQy9STQWs/0Q5g2GTtkhRggM00TTtI6f8DvR
      qDfw+Z233TZNg/0hOI/bS6dVb6D5ffY2eO5/szAFmktFWA/SVotGXcdne6M4cv7KPr9dOx7k
      /C3TRKCgKsADlun1+xzz7cRQFrg0Fcvi2K0WLVNHNxW8HodR9hO9/xoKoh050o5TnQOUUuvM
      b+eJRBIY9TIzszO2eRduXievu8hubfDSq6+TjNs9LUw++/gTVG+AkUQIM5xkMNr5s32jnOXD
      63dQahXil69w9bz9Uoilu7ep6iYDI+PkttLMzNpZQiw++uADArEQ66sl3vjW1wjYLIVo1gp8
      fmuJUDSG22gyPjtja7PfWLzNaq5BMZPi+Ze+zLDDh8AvPvsEoXnxozHywhXsFi3kNpe4tZKh
      Uchx8fkvcf7cgG2Zd774DEMoTFw6z8ZiiZnZMZucOu+/+wHhmJd82c0bb75i28kK60ssFmtE
      I320KgXH+3/382tUhZf05gavvPZ1+qJ2b0CD67/9BFcgyFDQi/vcOAlf56tazW+f7hzAFwww
      MDRG1GtRrDQc816YeZ7+sJdY/6BD5wdQifUnuXJpnKXVTce1MN5QgudnJnG5/Zx36PywMwm+
      MD1DLbeJ7vjOVHnpy6/g1jTOjU3Ydn4Al9vLwNAwgzEf6YLT8g4YPn+J0WSUULTPsfMDhON9
      XJmZplAqOp5TfGiCqdEB/MEoIw6dHyAUiTJz5SpbSwuobqfnpptXvvIimupiYvKC4xPWHwky
      ODRBUG1SrjnNFmDq6ovEg14SyWGHzg+gkhhIMntxhKW1bZxeVIHYwOkqgOb2kt1cIZMvo6KT
      K9mvMcmmNinXdXwui2vXPnOc3Am9xtzCGprXTc5hwmgZDVY3t4kkY9z66CPSefs9erweNwtz
      d6nWdRqVMrrtyFGwtrKMYWq06mluzS/blqmoLkq5bbbSeVxuQTZjbwmr5DNki1XCQTcf/uYa
      DZsd8AA0YXB3fhHV5yazaT+5bVULbGaLRKJ+Pvnwt5Tr9p3QrcLdu3dpNhVq9aLDGiPBysoK
      qstPdvMeS+vb9u10+0itLZAtVsBqUXB4CGa2Nqg2ddyqzsfXv3C4/wpms8L80gaekJesw+Ta
      atVO2QqUSdE3NsnM7CwBf4BExH4jzXS2yOzsLFdnpwmEog5PFpN6S2F2doahRJQ+h8/r9WKe
      SHKMK889R9AfoM/hzZLJ5Lk0M8vszDTBcLi9981RBNWGxezsLBPDfUTj9h93WvUSvsggM7Oz
      BH0Bkraf9yGbzjJ5eZbnrl4lGArg0+xnLKVqi9nZGcI+P4PD9vUXtrcZnZrl6nPPEQwECPvt
      o0XmijVmZ2eZmR7BF4g7zJd0DMvH7JUrxPwBhhxWeBa3txi8OMPs/fsfs13huWOFmp2d5erM
      JP6g0/03aBpuZmdnSISCJIfs32yVbPq0J8EWC/NzNAyT5NCY49BGb1SYW1gBRWNyagqfjWUF
      IJfaYDtbxOMPMTkxhn1ftVhemKfWMkkkhxnst490bzRrzC0sIVA5PznlOLQpZLbZTOdweQJM
      TU441C9YXbpHpaET6xt0HNqYeoP5+QVMAeOT04RsxrUApXyata00oWg/4w5DG2EZzN+dQ7cE
      58YuEAvbL4mul/Msrm6iqG6mL03ZWlYAtjdWyBWr+MMxzo8O2+ZDWNy7e4emKRgcmXAc2jRr
      Je4trYHqYmpqCo9D9PnM1hrpfBlvIMKF8RHH+y+3RZH0NNInWNLTSAWQ9DT/H1vIBDGyklbm
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 9' width='192'>
      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
      dMqE6gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Subscribers' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='avgRevPerCust' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='mktSpend' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
